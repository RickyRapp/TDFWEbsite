/*------------------------------------*\
    # tools.ricky
\*------------------------------------*/
/**
 * Custom grid based on flexbox.
 * $f-grid-gutter - amount of space between columns
 * $f-grid-columns - number of columns of the grid
 */
$grid-gutter: 36px;
$grid-gutter-form: 18px;
$grid-gutter-lrg: 72px; 
$grid-columns: 12;
/**
 * The flex-col mixin is used for building flexbox grid columns
 */
@define-mixin grid-span $grid-span: 1, $context: $grid-columns {
    width: calc($(grid-span) / $(context) * 100%);
}
@define-mixin grid-push $push: 1, $context: $grid-columns {
    margin-left: calc($(push) / $(context) * 100%);
}
/**
 * The grid-pull mixin is used for pulling columns using margin-left
 * for the space of a number of columns
 */
@define-mixin grid-pull $pull: 1, $context: $grid-columns {
    margin-right: calc($(pull) / $(context) * 100%);
}
/**
 * Row
 */
.row {
    margin-left: calc(-$grid-gutter / 2);
    margin-right: calc(-$grid-gutter / 2);
    display: flex;
    flex-wrap: wrap; 

    &--form {
        margin-left: calc(-$grid-gutter-form / 2);
        margin-right: calc(-$grid-gutter-form / 2);

        .col {
            padding-left: calc($grid-gutter-form / 2);
            padding-right: calc($grid-gutter-form / 2);
        }
    }

    &--align {

        &--center {
            justify-content: center;
        }
    }
}
/**
 * Column
 */
.col {
    padding-left: calc($grid-gutter / 2);
    padding-right: calc($grid-gutter / 2);
}

.row-align-center {
    align-items: center;
}

.row-align-bottom {
    align-items: flex-end;
}

.row-justify-center {
    justify-content: center;
}

.row-spaced {
    margin-left: calc(-$grid-gutter-lrg / 2);
    margin-right: calc(-$grid-gutter-lrg / 2);

    .col {
        padding-left: calc($grid-gutter-lrg / 2);
        padding-right: calc($grid-gutter-lrg / 2);
    }
}